[{"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Main.js":"6","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Header.js":"7","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\GridHeader.js":"8","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Table.js":"9","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Action.js":"10","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\SearchBar.js":"11","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Edit.js":"12","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Delete.js":"13","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\AddMod.js":"14"},{"size":780,"mtime":1615555934112,"results":"15","hashOfConfig":"16"},{"size":1705,"mtime":1615708218996,"results":"17","hashOfConfig":"16"},{"size":5226,"mtime":1589284044061,"results":"18","hashOfConfig":"16"},{"size":475,"mtime":1591529983724,"results":"19","hashOfConfig":"16"},{"size":144,"mtime":1614659049370,"results":"20","hashOfConfig":"16"},{"size":351,"mtime":1616357002312,"results":"21","hashOfConfig":"16"},{"size":1348,"mtime":1617462187837,"results":"22","hashOfConfig":"16"},{"size":788,"mtime":1615794059696,"results":"23","hashOfConfig":"16"},{"size":10993,"mtime":1616358607288,"results":"24","hashOfConfig":"16"},{"size":1947,"mtime":1616356816193,"results":"25","hashOfConfig":"16"},{"size":1211,"mtime":1616356965700,"results":"26","hashOfConfig":"16"},{"size":6232,"mtime":1616564250435,"results":"27","hashOfConfig":"16"},{"size":4942,"mtime":1616359382763,"results":"28","hashOfConfig":"16"},{"size":8034,"mtime":1616357765006,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"cncoix",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\index.js",["67","68"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport theme from '../src/utils/theme';\r\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n",["69","70"],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\App.js",["71","72","73"],"import React from 'react';\r\n//import './App.css';\r\n//import theme from '../src/utils/theme';\r\n//import { makeStyles } from '@material-ui/core';\r\n//import CollectorDashboard from '../src/views/CollectorDashboard';\r\n//import Header from '../src/components/Header';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ROLL_NUMBER } from '../src/utils/constants';\r\nimport Main from '../src/components/Main';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\n//const store = createStore(\r\n    // instance of store\r\n //   rootReducer,\r\n  //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace:true})\r\n  //);\r\n  \r\n\r\n/*const useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#6D7183',\r\n      outline: '1px solid slategrey',\r\n    },\r\n  },\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n\r\n}));*/\r\nconst App = () => {\r\n  //console.log('theme', theme);\r\n  //const classes = useStyles();\r\n  return (\r\n    //<div className={classes.mainBackground}>\r\n    //<Provider store={store}>\r\n    //</Provider>\r\n    <div>   \r\n      <Router basename={`/${ROLL_NUMBER}`}>\r\n        <Route exact path=\"/\" component={Main} />\r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Main.js",[],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Header.js",["74","75"],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\GridHeader.js",[],"C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Table.js",["76","77","78","79","80","81","82","83","84","85"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { pxToRem, pxToVw, pxToVh } from '../utils/theme';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Action from \"./Action\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst headCells = [\r\n  { id: 'name_customer', label: 'Customer Name',numeric: false, disablePadding: true },\r\n  { id: 'cust_number', label: 'Customer#',numeric: true, disablePadding: false },\r\n  { id: 'doc_id', label: 'Bill#',numeric: true, disablePadding: false },\r\n  { id: 'bill_amount', label: 'Bill Amount',numeric: true, disablePadding: false },\r\n  { id: 'due_date', label: 'Due Date',numeric: false, disablePadding: false },\r\n  { id: 'predicted_payment_date', label: 'Predicted Payment Date',numeric: false, disablePadding: false },\r\n  { id: 'aging_bucket', label: 'Predicted Aging Bucket',numeric: false, disablePadding: false },\r\n  { id: 'notes', label: 'Notes',numeric: false, disablePadding: false },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n console.log(orderBy);\r\n const createSortHandler = (property) => (event) => {\r\n onRequestSort(event, property);\r\n};\r\n\r\nreturn (\r\n<TableHead>\r\n <TableRow>\r\n<StyledTableCell padding=\"checkbox\">\r\n     <Checkbox\r\n        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n        checked={rowCount > 0 && numSelected === rowCount}\r\n        onChange={onSelectAllClick}\r\n        inputProps={{ 'aria-label': 'select all' }}\r\n    />\r\n    </StyledTableCell>\r\n    {headCells.map((headCells) => (\r\n     <StyledTableCell\r\n     key={headCells.id }\r\n        padding={headCells.disablePadding ? 'none' : 'default'}\r\n        sortDirection={orderBy === headCells.id ? order : false}\r\n    >\r\n    <TableSortLabel\r\n        active={orderBy === headCells.id}\r\n            onClick={createSortHandler(headCells.id)}\r\n        >\r\n        {headCells.label}\r\n            {orderBy === headCells.id ? (\r\n         <span className={classes.visuallyHidden}>\r\n            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n        </span>\r\n              ) : null}\r\n     </TableSortLabel>\r\n    </StyledTableCell>\r\n    ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.number.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#273D49CC\",\r\n    color: \"#97A1A9\",\r\n    borderBottomColor:\"black\",\r\n    fontSize: 12,\r\n  },\r\n  body: {\r\n  fontSize: 12,\r\n  color: \"#FFFFFF\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#273D49CC\",\r\n      heigth: pxToRem(6),\r\n     },\r\n      \"&:nth-of-type(even)\": {\r\n        backgroundColor: \"#283A46\",\r\n        height: pxToRem(6),\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    marginBottom: theme.spacing(3),\r\n    backgroundColor: '#273D49CC',\r\n     top:pxToRem(100),\r\n    \r\n    width: '98%',\r\n      marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    border:\"none\",\r\n},\r\ncontainer: {\r\n maxHeight: 410,\r\n },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  grid:{\r\n    backgroundColor:'#39495E',\r\n    height:'81.7vh'\r\n},\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction ascendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => ascendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction TableData() {\r\n  const classes = useStyles();\r\n  let [responseData, setResponseData] = React.useState([]);\r\n  let [isNext, isNextFunc] = React.useState(false);\r\n  let [pageCount, setCount] = React.useState(1);\r\n  const fetchData = () => {\r\n    axios.get(\r\n        \r\n        `http://localhost:8080/1806199/data.do?count=${pageCount}&limit=10`,\r\n        )\r\n      .then((response) => {\r\n        setResponseData([...responseData, ...response.data]);\r\n        isNextFunc(true)\r\n        console.log(responseData);\r\n      })\r\n      \r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  function fetchMoreData() {\r\n    setCount(pageCount + 1);\r\n    fetchData();\r\n  }\r\n\r\n  useEffect( () =>{\r\n    isNextFunc(true);\r\n    fetchMoreData();\r\n  },[]);\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('bill_amount');\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = responseData.map((n) => n.doc_id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, doc_id) => {\r\n    const selectedIndex = selected.indexOf(doc_id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, doc_id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\nconst isSelected = (doc_id) => selected.indexOf(doc_id) !== -1;\r\nconst emptyRows = rowsPerPage - Math.min(rowsPerPage, responseData.length - page * rowsPerPage);\r\nreturn (\r\n    <Grid container spacing={0} className={classes.grid}>\r\n    <Grid item xs={12}>\r\n    <Paper className={classes.table}>\r\n    <Action selected={selected} responseData={responseData}/>\r\n     <InfiniteScroll\r\n        dataLength={responseData.length}\r\n        next={fetchMoreData}\r\n        hasMore={isNext}\r\n        loader={\r\n          <div\r\n          style={{ height: \"80%\", paddingLeft: \"40%\", overflow: \"hidden\" }}\r\n        > \r\n     <CircularProgress /></div>\r\n      } useWindow={false}\r\n      scrollableTarget=\"scrollable\"\r\n      ><TableContainer className={classes.container} id=\"scrollable\">\r\n      <Table \r\n        stickyHeader\r\n        aria-labelledby=\"tableTitle\"\r\n        aria-label=\"enhanced table\">\r\n        <EnhancedTableHead\r\n            classes={classes}\r\n             numSelected={selected.length}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            numSelected={selected.length}\r\n            order={order}\r\n         orderBy={orderBy}\r\n        onRequestSort={handleRequestSort}\r\n        rowCount={responseData.length}\r\n     />\r\n    <TableBody>\r\n              {\r\n                stableSort(responseData, getComparator(order, orderBy))\r\n\r\n                    .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.doc_id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    \r\n                    <StyledTableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.doc_id)}\r\n                      value={row.doc_id}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <StyledTableCell padding=\"checkbox\" style={{borderBottom:'none'}}>\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </StyledTableCell>\r\n                      <StyledTableCell component=\"th\"  scope=\"row\" padding=\"none\" style={{borderBottom:'none'}}>\r\n                        {row.name_customer}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>{row.cust_number}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>{row.doc_id}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>{row.total_open_amount}</StyledTableCell>\r\n                      \r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>{row.due_in_date}</StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>--</StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>--</StyledTableCell>\r\n                      <StyledTableCell align=\"right\" style={{borderBottom:'none'}}>{row.notes}</StyledTableCell>\r\n                    </StyledTableRow>\r\n                  );\r\n                  })}\r\n         </TableBody>\r\n       </Table>\r\n        </TableContainer>\r\n      </InfiniteScroll>\r\n     </Paper>\r\n    </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default TableData;\r\n","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Action.js",["86","87","88","89"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport React, {Component, useState} from 'react';\r\nimport Delete from './Delete';\r\nimport Edit from './Edit';\r\nimport AddMod from './AddMod';\r\nimport SearchBar from './SearchBar';\r\n\r\nexport default function Actions(props)\r\n{\r\n  const useStyles = makeStyles((theme) => ({\r\n   root: {\r\n     display: \"flex\",\r\n     flexGrow: 1,\r\n        },\r\n   grid:{\r\n     backgroundColor: '#273D49CC',\r\n     marginTop:\"3vh\",\r\n     paddingTop:\"1.3vh\",\r\n     width: \"96vw\",\r\n     height: \"80vh\",\r\n     borderRadius: '0.4rem',\r\n    },\r\n   predict:{\r\n     variant: 'contained',\r\n     disableRipple: 'true',\r\n     height: '4.7vh',\r\n     width: '5.5vw',\r\n     paddingLeft: '0.5vw',\r\n     verticalAlign: 'middle',\r\n     fontSize: '1.056vw',\r\n     fontFamily: 'Ubuntu',\r\n     color: '#FFFFFF',\r\n     backgroundColor:'#97A1A9',\r\n     textTransform: 'none',\r\n     letterSpacing: '0px',\r\n     borderRadius: '0.5rem',\r\n    },\r\n   corres:{\r\n     variant: 'outlined',\r\n     disableRipple: 'true',\r\n     marginLeft: '1vw',\r\n     height: '4.7vh',\r\n     width: '22vw',\r\n     paddingLeft: '0.5vw',\r\n     fontSize: '1.056vw',\r\n     verticalAlign: 'middle',\r\n     fontFamily: 'Ubuntu',\r\n     color: '#97A1A9',\r\n     borderRadius: '0.5rem',\r\n     border: '0.04rem solid #97A1A9',\r\n     textTransform: 'none',\r\n    },\r\n}));\r\n    \r\nconst [addPopup,setAddPopup] = React.useState(false);\r\nconst classes = useStyles();\r\nconst selected=props.selected;\r\nconst responseData=props.responseData;\r\nreturn (\r\n <Toolbar style={{backgroundColor:'#273D49CC'}}>\r\n     <Button className={classes.predict} >Predict</Button>\r\n     <Button className={classes.corres}>View Correspondence</Button>\r\n     <AddMod/>\r\n     <Edit selected={selected}/>\r\n     <Delete selected={selected}/>\r\n     <SearchBar responseData={responseData}/>\r\n  </Toolbar>\r\n    )\r\n}","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\SearchBar.js",["90","91","92"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        width: '40vh',\r\n        height:'4.5vh',\r\n        border:1,\r\n        borderStyle:\"solid\",\r\n        borderRadius:'1vh',\r\n        borderColor:'#14AFF1',\r\n        margin:'2vh'\r\n      },\r\n      input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        color:'#FFFFFF'\r\n      },\r\n  \r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n  const classes = useStyles();\r\n  const [search, setSearch] = useState('');\r\n  return (\r\n    <paper className={classes.root}>\r\n    <InputBase\r\n      className={classes.input}\r\n      placeholder=\"Search by Bill Number\"\r\n      inputProps={{ \"aria-label\": \"search\" }}\r\n   />\r\n   <IconButton\r\n      type=\"submit\"\r\n      className={classes.iconButton}\r\n      aria-label=\"search\"\r\n   >\r\n   <SearchIcon className={classes.iconButton} />\r\n   </IconButton>\r\n </paper>\r\n    );\r\n }","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Edit.js",["93","94","95"],"import React from 'react';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { pxToRem, pxToVw, pxToVh } from '../utils/theme';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n  },\r\n    editbutton: {\r\n    variant: 'outlined',\r\n    disableRipple: 'true',\r\n    marginLeft: '1.05vw',\r\n    height: '4.7vh',\r\n    width: '5.3vw',\r\n    paddingLeft: '5px',\r\n    fontSize: '1.056vw',\r\n     fontFamily: 'Ubuntu',\r\n    color: '#97A1A9',\r\n    borderRadius: '0.5rem',\r\n    border: '0.04rem solid #97A1A9;',\r\n    letterSpacing: '0px',\r\n    textTransform: 'none',\r\n    },\r\n    buttonResetColor:{\r\n        color:\"white\",\r\n        backgroundColor:\"transparent\",\r\n        border: \"1px solid #14AFF1\"\r\n  },\r\n    buttonSaveColor:{\r\n        color:\"white\",\r\n        backgroundColor:\"#14AFF1\"\r\n  },\r\n    buttonCancelColor:{\r\n      color:\"#14AFF1\",\r\n      right: pxToRem(120),\r\n  },\r\n    styledText: {\r\n      width: '25ch',\r\n      width: pxToVw(180),\r\n      height: pxToVh(37),\r\n      background: \"#283A46 0% 0% no-repeat padding-box \",\r\n      border: \"1px solid #356680\",\r\n      borderRadius: \"5px\",\r\n      opacity: \"1\",\r\n      textTransformation: \"none\",\r\n      textAlign: \"center\",\r\n      color:'white',\r\n    },\r\n    \r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    backgroundColor:\"#2A3F4D\",\r\n    color:'white',\r\n    display: \"flex\",\r\n     flexGrow: 1,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n        aria-label=\"close\"\r\n        className={classes.closeButton}\r\n        onClick={onClose}\r\n        >\r\n        <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    backgroundColor: \"#2A3E4C\",\r\n    color: \"white\"\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: \"#2A3E4C\"\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nexport default function EditButton(props) {\r\n    console.log(props.selected);\r\n    const [employee, setemployee] = React.useState({ \r\n        total_open_amount: 0,\r\n        notes: '',\r\n    });  \r\n   const Edit = (values) => {  \r\n    const data = { name_customer:employee.name_customer, \r\n    cust_number: employee.cust_number }\r\n    axios.get(`http://localhost:8080/1806199/edit2.do?total_open_amount=${employee.total_open_amount}&notes=${employee.notes}&doc_id=${values}`)  \r\n     .then((response) => {  \r\n            alert(\"Successful\")\r\n        })\r\n        .catch(err => \r\n        alert(err));\r\n  };  \r\n    const openEdit=()=>{\r\n      const values=props.selected[0];\r\n      Edit(values);\r\n      handleClose();\r\n    }\r\n    const onChange = (e) => {  \r\n      e.persist();  \r\n    setemployee({...employee, [e.target.name]: e.target.value});  \r\n}  \r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen} className={classes.root, classes.editbutton} variant=\"outlined\" color=\"primary\" disableElevation startIcon={<EditIcon />}>\r\n      Edit\r\n    </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Edit Invoice\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div>\r\n            <span>Bill Amount</span>\r\n            <span> &nbsp;&nbsp;\r\n            <TextField\r\n              id=\"outlined-secondary\"\r\n              onChange={ onChange }\r\n              className={classes.styledText}\r\n              name=\"total_open_amount\"\r\n              />\r\n              </span>\r\n          </div>\r\n          &nbsp;&nbsp;\r\n          <div>\r\n            <span>Notes</span>\r\n            <span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onChange={ onChange }\r\n              name=\"notes\"\r\n              />\r\n              </span>\r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} className={classes.buttonCancelColor} >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            text-align=\"left\"\r\n            className={classes.buttonResetColor}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={openEdit}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            font=\"normal normal normal 20px/24px Ubuntu\"\r\n            letter-spacing=\"0px\"\r\n            opacity=\"1\"\r\n            className={classes.buttonSaveColor}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\Delete.js",["96","97","98"],"import React from \"react\";\r\nimport { withStyles,makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveIcon from '@material-ui/icons/Remove' ;\r\nimport  { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    backgroundColor:\"#2A3F4D\",\r\n    color:'white'\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n    <Typography variant=\"h6\">{children}</Typography>\r\n    {onClose ? (\r\n    <IconButton\r\n    aria-label=\"close\"\r\n    className={classes.closeButton}\r\n    onClick={onClose}\r\n    >\r\n    <CloseIcon />\r\n    </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: '#2A3F4D',\r\n    color: \"white\"\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: '#2A3F4D'\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  console.log(props.selected);\r\n  const [data, setData] = useState([]);  \r\n    const deleteeployee = (values) => {  \r\n      axios.get(`http://localhost:8080/1806199/dlt.do?doc_id=${values}`)  \r\n      .then((response) => {  \r\n        console.log(\"Successful!\")\r\n        })\r\n        .catch(err => \r\n        console.log(err.data));\r\n    };  \r\n const [open, setOpen] = React.useState(false);\r\n const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const openDelete=()=>{\r\n    let i;\r\n    const values=props.selected;\r\n    for(i=0;i<values.length;i++)\r\n      deleteeployee(values[i]);\r\n    handleClose();\r\n  }\r\n  const useStyles= makeStyles((theme)=>({\r\n    buttonCancelColor:{\r\n    color:\"white\",\r\n    backgroundColor:\"transparent\",\r\n    border: \"1px solid #14AFF1\"\r\n    },\r\n    buttonSaveColor:{\r\n    color:\"white\",\r\n    backgroundColor:\"#14AFF1\"\r\n    },\r\n    changeDialog: {\r\n    maxWidth : '47%', \r\n    maxHeight : '47%',\r\n    display:'flex',\r\n    justifyContent:\"center\",\r\n     margin: 'auto'\r\n    },\r\n      spanEdit:{\r\n          color:\"#FF5E5E\"\r\n      }\r\n      ,\r\n  delete:{\r\n    variant: 'outlined',\r\n    disableRipple: 'true',\r\n     marginLeft: '1.05vw',\r\n    height: '4.7vh',\r\n    width: '6.4vw',\r\n    paddingLeft: '1px',\r\n    fontSize: '1.056vw',\r\n    fontFamily: 'Ubuntu',\r\n    color: '#97A1A9',\r\n    borderRadius: '0.5rem',\r\n    border: '0.04rem solid #97A1A9',\r\n    letterSpacing: '0px',\r\n    textTransform: 'none',\r\n    },\r\n  }))\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button className={classes.delete} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n      <RemoveIcon style={{marginBottom: '0px', fontSize: '20px' }} />\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        className={classes.changeDialog}\r\n      >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} >\r\n        <span style={{paddingLeft: '4px'}}>\r\n          Delete record(s)?\r\n        </span>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            You'll lose your record(s) after this action. We can't recover them\r\n            once you delete.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Are you sure you want to <span className={classes.spanEdit}>permanently delete</span> them?\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <div>\r\n        <Grid container spacing={2}>\r\n         <Grid item>\r\n        <Button autoFocus onClick={handleClose} color=\"primary\" className={classes.buttonCancelColor}>\r\n             Cancel\r\n        </Button>\r\n        </Grid>\r\n        <Grid item>\r\n        <Button variant=\"outlined\" color=\"primary\" className={classes.buttonSaveColor}\r\n        onClick={openDelete}>\r\n            Delete\r\n        </Button>\r\n        </Grid>\r\n    </Grid>\r\n    </div>\r\n</DialogActions>\r\n</Dialog>\r\n</div>\r\n  );\r\n}","C:\\Users\\KIIT\\Desktop\\HRC Docs\\Summer_Internship_UI\\src\\components\\AddMod.js",["99","100","101","102","103","104","105","106","107","108"],"import  React from \"react\";\r\nimport { Typography,makeStyles,Paper, Button,TextField,Grid} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { pxToRem, pxToVw, pxToVh } from '../utils/theme';\r\nimport  { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = makeStyles({\r\n  paper:{\r\n    heigth:pxToRem(100),\r\n    width:pxToRem(1130),\r\n    background: \"#2A3E4C 0% 0% no-repeat padding-box\",\r\n    boxShadow: \"0px 8px 24px #00000029\",\r\n    borderRadius: pxToRem(6),\r\n    opacity: 1,\r\n    overflow:\"hidden\"\r\n    },\r\n  cancelButton:{\r\n    background: \"#2C404E 0% 0% no-repeat padding-box\",\r\n    border:\"1px solid #14AFF1\",\r\n    borderRadius: pxToRem(10),\r\n    textTransform:\"None\",\r\n    color:\"#FFFFFF\",\r\n    opacity: 1,\r\n    height:pxToRem(45),\r\n    width:pxToRem(92),\r\n    minHeight:pxToRem(45),\r\n    minWidth:pxToRem(92)\r\n    },\r\n  clearButton:{\r\n    background: \"#2C404E 0% 0% no-repeat padding-box\",\r\n    border:\"1px solid #14AFF1\",\r\n    borderRadius: pxToRem(10),\r\n    textTransform:\"None\",\r\n    color:\"#FFFFFF\",\r\n    opacity: 1,\r\n    height:pxToRem(45),\r\n    width:pxToRem(92),\r\n    minHeight:pxToRem(45),\r\n    minWidth:pxToRem(92)\r\n    },\r\n  addButton:{\r\n    background: \"#14AFF1 0% 0% no-repeat padding-box\",\r\n    border:\"1px solid #14AFF1\",\r\n    borderRadius: pxToRem(10),\r\n    textTransform:\"None\",\r\n    color:\"#FFFFFF\",\r\n    opacity: 1,\r\n    height:pxToRem(45),\r\n    width:pxToRem(92),\r\n    minHeight:pxToRem(45),\r\n    minWidth:pxToRem(92)\r\n    },\r\n  texts:{\r\n    height:pxToRem(23),\r\n    textAlign:\"left\",\r\n    font: \"normal normal normal Ubuntu\",\r\n    fontSize:pxToRem(20),\r\n    letterSpacing: pxToRem(0),\r\n    color:\"#97A1A9\",\r\n    opacity: 1,\r\n    whiteSpace:\"nowrap\",\r\n    marginRight:pxToRem(15)\r\n    },\r\n  searchField1:{\r\n    height:pxToRem(40),\r\n    width:pxToRem(300),\r\n    margin:\"auto\", \r\n    borderRadius: pxToRem(8),\r\n    flexFlow:\"row nowrap\"\r\n    },\r\n  searchField2:{\r\n    height:pxToRem(191),\r\n    width:pxToRem(300),\r\n    marginLeft:pxToRem(90), \r\n    borderRadius: pxToRem(8),\r\n    flexFlow:\"row nowrap\"\r\n    },\r\n  add:{\r\n    variant: 'outlined',\r\n    disableRipple: 'true',\r\n    marginLeft: '37.2vw',\r\n    height: '4.7vh',\r\n    width:'5.15vw',\r\n    paddingLeft: '2px',\r\n    fontSize: '1.056vw',\r\n    fontFamily: 'Ubuntu',\r\n    color: '#FFFFFF',\r\n    borderRadius: '0.5rem',\r\n    border: '0.04rem solid #14AFF1',\r\n    textTransform: 'none',\r\n  },\r\n  searchBar:{\r\n    border: \"1px solid #356680\",\r\n    borderRadius: pxToRem(8),\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    opacity:1,\r\n    backgroundColor:\"#283A46\",\r\n    color:\"#FFFFFF\"\r\n  },\r\n});\r\nexport default function AddButtonDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = styles();\r\n  const [employee, setemployee] = useState({ name_customer: '',\r\n    cust_number:'',\r\n    doc_id: 0,\r\n    total_open_amount: 0,\r\n    due_in_date: new Date(),\r\n    notes: '',\r\n  });  \r\n  const resetForm = () => {\r\n    setemployee(employee);\r\n  }\r\n  const [showLoading, setShowLoading] = useState(false);  \r\n  const apiUrl = \"http://localhost:8080/1806199/save.do\";\r\n  const Insertemployee = (e) => {  \r\n    e.preventDefault();   \r\n    const data = { name_customer:employee.name_customer, \r\n                  cust_number: employee.cust_number, \r\n                  doc_id: employee.doc_id, \r\n                  total_open_amount: employee.total_open_amount, \r\n                  due_in_date:employee.due_in_date, \r\n                  notes: employee.notes };  \r\n  axios.get(apiUrl,{ params: data})  \r\n    .then((response) => {  \r\n    console.log(\"Successful!\")\r\n   })\r\n   .catch(err => \r\n    console.log(err.data));\r\n    handleClose();\r\n  };  \r\n  const onChange = (e) => {  \r\n       e.persist();  \r\n   debugger;  \r\n    setemployee({...employee, [e.target.name]: e.target.value});  \r\n  }  \r\n    \r\nreturn (\r\n   <div>\r\n      <Button onClick={handleClickOpen} className={ classes.add} variant=\"outlined\" color=\"primary\" disableElevation startIcon={<AddIcon />} >\r\n        Add\r\n      </Button>\r\n     <Dialog maxWidth={true}  scroll=\"body\" open={open} onClose={handleClose} classes={{paper:classes.paper}}>\r\n     <DialogTitle style={{color:\"#FFFFFF\"}}>\r\n    <Grid container  style={{flexFLow:\"row nowrap\",justifyContent:\"flex-start\"}}>\r\n    <Grid item >{\"Add Invoice\"}</Grid>\r\n    <Grid item style={{marginLeft:pxToRem(850)}}><CloseIcon className={classes.closeIcon} onClick={handleClose}/></Grid>\r\n    </Grid>\r\n    </DialogTitle>\r\n    <DialogContent dividers>\r\n    <Grid container style={{flexFlow:\"row nowrap\"}} spacing={5} >\r\n       <Grid item >\r\n          <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Customer Name<span style={{color:\"#FF5B5B\"}}>*</span></Grid>\r\n              <Grid item className={classes.searchField1} ><input className={classes.searchBar}type=\"text\"\r\n              name=\"name_customer\"\r\n              onChange={ onChange }/></Grid>\r\n              </Grid><br/>\r\n              <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Customer Number<span style={{color:\"#FF5B5B\"}}>*</span></Grid>\r\n              <Grid item className={classes.searchField1}><input className={classes.searchBar}type=\"text\"\r\n              name=\"cust_number\"\r\n              onChange={ onChange }/></Grid>\r\n              </Grid><br/>   \r\n              <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Invoice Number<span style={{color:\"#FF5B5B\"}}>*</span></Grid>\r\n              <Grid item className={classes.searchField1}><input className={classes.searchBar}type=\"text\"\r\n              name=\"doc_id\"\r\n              onChange={ onChange }/></Grid>\r\n              </Grid><br/>      \r\n              <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Invoice Amount<span style={{color:\"#FF5B5B\"}}>*</span></Grid>\r\n              <Grid item className={classes.searchField1}><input className={classes.searchBar}type=\"text\"\r\n              name=\"total_open_amount\"\r\n              onChange={ onChange }/></Grid>\r\n               </Grid>\r\n              </Grid>\r\n            <Grid item>\r\n            <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Due Date<span style={{color:\"#FF5B5B\"}}>*</span></Grid>\r\n              <Grid item className={classes.searchField1}>\r\n              <input className={classes.searchBar} type=\"date\"\r\n              name=\"due_in_date\"\r\n              onChange={ onChange }/>\r\n              </Grid>\r\n              </Grid><br/>\r\n              <Grid container style={{flexFlow:\"row nowrap\"}}>\r\n              <Grid item className={classes.texts}>Notes</Grid>\r\n              <Grid item className={classes.searchField2}><textarea className={classes.searchBar}\r\n                name=\"notes\"\r\n                onChange={ onChange }/></Grid>\r\n                </Grid>\r\n             </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions style={{padding:pxToRem(20)}}>\r\n            <Grid container>\r\n            <Button onClick={handleClose} className={classes.cancelButton}>\r\n             Cancel\r\n            </Button>\r\n            </Grid>\r\n            <Button onClick={resetForm} className={classes.clearButton}>\r\n             Clear\r\n            </Button>\r\n            <Button onClick={Insertemployee} className={classes.addButton} >\r\n              Add\r\n            </Button>\r\n       </DialogActions>\r\n    </Dialog>\r\n  </div>\r\n    );\r\n  }",{"ruleId":"109","severity":1,"message":"110","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"109","severity":1,"message":"118","line":7,"column":42,"nodeType":"111","messageId":"112","endLine":7,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":18},{"ruleId":"109","severity":1,"message":"119","line":11,"column":10,"nodeType":"111","messageId":"112","endLine":11,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":25,"column":21,"nodeType":"122","endLine":25,"endColumn":143},{"ruleId":"120","severity":1,"message":"121","line":27,"column":21,"nodeType":"122","endLine":27,"endColumn":129},{"ruleId":"109","severity":1,"message":"123","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"124","line":13,"column":19,"nodeType":"111","messageId":"112","endLine":13,"endColumn":25},{"ruleId":"109","severity":1,"message":"125","line":13,"column":27,"nodeType":"111","messageId":"112","endLine":13,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":201,"column":5,"nodeType":"128","endLine":201,"endColumn":7,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"130","line":206,"column":16,"nodeType":"111","messageId":"112","endLine":206,"endColumn":23},{"ruleId":"109","severity":1,"message":"131","line":207,"column":10,"nodeType":"111","messageId":"112","endLine":207,"endColumn":15},{"ruleId":"109","severity":1,"message":"132","line":207,"column":17,"nodeType":"111","messageId":"112","endLine":207,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":208,"column":23,"nodeType":"111","messageId":"112","endLine":208,"endColumn":37},{"ruleId":"109","severity":1,"message":"134","line":244,"column":7,"nodeType":"111","messageId":"112","endLine":244,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":270,"column":13,"nodeType":"137","endLine":270,"endColumn":42},{"ruleId":"109","severity":1,"message":"138","line":4,"column":16,"nodeType":"111","messageId":"112","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":4,"column":27,"nodeType":"111","messageId":"112","endLine":4,"endColumn":35},{"ruleId":"109","severity":1,"message":"139","line":57,"column":8,"nodeType":"111","messageId":"112","endLine":57,"endColumn":16},{"ruleId":"109","severity":1,"message":"140","line":57,"column":17,"nodeType":"111","messageId":"112","endLine":57,"endColumn":28},{"ruleId":"109","severity":1,"message":"141","line":1,"column":24,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"142","line":30,"column":10,"nodeType":"111","messageId":"112","endLine":30,"endColumn":16},{"ruleId":"109","severity":1,"message":"143","line":30,"column":18,"nodeType":"111","messageId":"112","endLine":30,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":52,"column":7,"nodeType":"146","messageId":"147","endLine":52,"endColumn":12},{"ruleId":"109","severity":1,"message":"148","line":122,"column":11,"nodeType":"111","messageId":"112","endLine":122,"endColumn":15},{"ruleId":"149","severity":1,"message":"150","line":150,"column":64,"nodeType":"151","messageId":"152","endLine":150,"endColumn":65},{"ruleId":"109","severity":1,"message":"141","line":12,"column":21,"nodeType":"111","messageId":"112","endLine":12,"endColumn":30},{"ruleId":"109","severity":1,"message":"148","line":67,"column":10,"nodeType":"111","messageId":"112","endLine":67,"endColumn":14},{"ruleId":"109","severity":1,"message":"153","line":67,"column":16,"nodeType":"111","messageId":"112","endLine":67,"endColumn":23},{"ruleId":"109","severity":1,"message":"154","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"155","line":2,"column":32,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},{"ruleId":"109","severity":1,"message":"156","line":2,"column":46,"nodeType":"111","messageId":"112","endLine":2,"endColumn":55},{"ruleId":"109","severity":1,"message":"124","line":9,"column":19,"nodeType":"111","messageId":"112","endLine":9,"endColumn":25},{"ruleId":"109","severity":1,"message":"125","line":9,"column":27,"nodeType":"111","messageId":"112","endLine":9,"endColumn":33},{"ruleId":"109","severity":1,"message":"141","line":10,"column":21,"nodeType":"111","messageId":"112","endLine":10,"endColumn":30},{"ruleId":"109","severity":1,"message":"157","line":110,"column":10,"nodeType":"111","messageId":"112","endLine":110,"endColumn":22},{"ruleId":"109","severity":1,"message":"158","line":110,"column":24,"nodeType":"111","messageId":"112","endLine":110,"endColumn":40},{"ruleId":"109","severity":1,"message":"159","line":128,"column":10,"nodeType":"111","messageId":"112","endLine":128,"endColumn":21},{"ruleId":"109","severity":1,"message":"160","line":128,"column":23,"nodeType":"111","messageId":"112","endLine":128,"endColumn":37},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'Switch' is defined but never used.","'createStore' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'pxToVw' is defined but never used.","'pxToVh' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMoreData'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'setPage' is assigned a value but never used.","'dense' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","'addPopup' is assigned a value but never used.","'setAddPopup' is assigned a value but never used.","'useEffect' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'data' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setData' is assigned a value but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'showLoading' is assigned a value but never used.","'setShowLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [fetchMoreData]",{"range":"166","text":"167"},[5995,5997],"[fetchMoreData]"]